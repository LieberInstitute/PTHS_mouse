
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### Maher mouse differential expression analysis 
> # qsub -V -l mf=10G,h_vmem=15G,h_stack=256M -cwd -b y R CMD BATCH analyze_tcf4_mouse.R
> cleaningY = function(y, mod, P=ncol(mod)) {
+   Hat=solve(t(mod)%*%mod)%*%t(mod)
+   beta=(Hat%*%t(y))
+   cleany=y-t(as.matrix(mod[,-c(1:P)])%*%beta[-c(1:P),])
+   return(cleany)
+ }
> 
> library(limma)
> library(sva)
Loading required package: mgcv
Loading required package: nlme
This is mgcv 1.8-15. For overview type 'help("mgcv-package")'.
Loading required package: genefilter
> library(ggplot2)
> library(jaffelab)
> library(WriteXLS)
> 
> dir = "/dcl01/lieber/ajaffe/Brady/mouseRNAseq"
> 
> ##############################################
> # load phenotype data and RPKM expression data
> load('./rdas/pheno.rda',envir = dat<-new.env())
> load('/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rpkmCounts_tcf4_mouse_OCT20_n36.rda')
> pd = cbind(dat$pd,pd)
> all.equal(pd$FileID,pd$SAMPLE_ID) #samples line up
[1] TRUE
> 
> geneMap$coord = paste0(geneMap$Chr, ":", geneMap$Start , "-", geneMap$End)
> exonMap$coord = paste0(exonMap$Chr, ":", exonMap$Start, "-", exonMap$End)
> 
> ## expressed genes and exons
> meanGeneExprs = rowMeans(geneRpkm)
> meanExonExprs = rowMeans(exonRpkm)
> meanJxnExprs = rowMeans(jRpkm)
> 
> rpkmCuts = c(0,0.1,0.2,0.5,1,2,5,10,50)
> names(rpkmCuts) = paste0("RPKM > ", rpkmCuts)
> numGeneExprs = sapply(rpkmCuts, function(x) sum(meanGeneExprs > x))
> numGeneExprs
  RPKM > 0 RPKM > 0.1 RPKM > 0.2 RPKM > 0.5   RPKM > 1   RPKM > 2   RPKM > 5 
     35976      20531      18166      14757      12387       9590       5329 
 RPKM > 10  RPKM > 50 
      2614        348 
> numExonExprs = sapply(rpkmCuts, function(x) sum(meanExonExprs > x))
> numGeneByExonExprs = sapply(rpkmCuts, function(x)
+   length(unique(exonMap$Geneid[meanExonExprs > x])))
> numJxnExprs = sapply(rpkmCuts, function(x) sum(meanJxnExprs > x))
> numJxnExprs
  RPKM > 0 RPKM > 0.1 RPKM > 0.2 RPKM > 0.5   RPKM > 1   RPKM > 2   RPKM > 5 
   2087174     263015     215868     173596     149842     129323      98925 
 RPKM > 10  RPKM > 50 
     69475      12318 
> 
> table(jMap$code[meanJxnExprs > 0.2])
Loading required package: GenomicRanges
Error in .requirePackage(package) : 
  unable to find required package ‘GenomicRanges’
Calls: table ... .findInheritedMethods -> getClass -> getClassDef -> .requirePackage
In addition: Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘GenomicRanges’
Execution halted
