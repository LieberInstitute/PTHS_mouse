rm(list = ls())
library(jaffelab)
library(WriteXLS)
library(clusterProfiler)
library(org.Mm.eg.db)
library(jaffelab)
library(limma)
library(biomaRt)
load("rdas/mouse_tcf4_DE_objects.rda")
load('./rdas/pheno.rda',envir = dat<-new.env())
load('/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rpkmCounts_tcf4_mouse_OCT20_n36.rda')
pd = cbind(dat$pd,pd)
#################
# filtering exons
eIndex = which(rowMeans(exonRpkm) > 0.1)
exonRpkm = exonRpkm[eIndex,]
exonMap = exonMap[eIndex,]
#########################
# remove outlier mouse 31
pd = pd[-31,]
exonRpkm = exonRpkm[,-31]
#################
# get mouse Tcf4B
ensembl = useMart("ensembl")
ensembl = useDataset("mmusculus_gene_ensembl",mart=ensembl)
sym = getBM(attributes = c('chromosome_name','exon_chrom_start','exon_chrom_end',"ensembl_transcript_id"), 
            mart=ensembl,filters = 'ensembl_transcript_id',value ='ENSMUST00000114982')
#####################
# get only Tcf4 exons
tcf4Index=which(exonMap$Symbol == "Tcf4")
tcf4Map  = exonMap[tcf4Index,]
tcf4Rpkm = exonRpkm[tcf4Index,]
tcf4Index = which(tcf4Map$Start %in% sym$exon_chrom_start& tcf4Map$End %in% sym$exon_chrom_end)
tcf4Map  = tcf4Map[tcf4Index,]
tcf4Rpkm = tcf4Rpkm[tcf4Index,]
meanExonExprs = rowMeans(tcf4Rpkm)
############################
mod = model.matrix(~Genotype+Age, data=pd)
###################
# exon DE, with SVA
load("rdas/mouse_tcf4_sva_objects.rda")
yExon = log2(tcf4Rpkm+1)
modExon = cbind(mod, svaExon$sv)
fitExon = lmFit(yExon, modExon)
outExon = toptable(fitExon,coef = 2,number = nrow(yExon),genelist = cbind(tcf4Map,meanRpkm = meanExonExprs),confint = T)
outExon = outExon[order(outExon$Start),]
#outExon$pos = round(apply(outExon[,c('Start','End')],1,mean))
outExon$pos = factor(outExon$Start)
ind = which(outExon$adj.P.Val<.05)
################################
# Exon plots with standard error
ylim = c(min(outExon[,c('CI.L','CI.R')])-.2,max(outExon[,c('CI.L','CI.R')])+.2)
plot(outExon$pos,outExon$logFC,xlab = 'chr18',ylab = 'Log2 Fold-change',
     ylim = ylim,main = 'Tcf4 Exon Fold-change', xaxt = 'n')
arrows(as.numeric(outExon$pos),outExon$CI.L,as.numeric(outExon$pos),outExon$CI.R,
       code=3,length=0.04,angle=90,col='black')
v1 = seq(1,nrow(outExon),4)
v2 = outExon$pos[v1]
axis(side = 1,at = v1,labels = v2)
abline(h = 0,col = 'red')
text(x = ind,y= outExon$CI.R[ind]+.1,labels = '*')
plot(outExon$pos,outExon$logFC,xlab = 'chr18',ylab = 'Log2 Fold-change',
     ylim = ylim,main = 'Tcf4 Exon Fold-change', xaxt = 'n',cex.lab = 1.25)
arrows(as.numeric(outExon$pos),outExon$CI.L,as.numeric(outExon$pos),outExon$CI.R,
       code=3,length=0.04,angle=90,col='black')
v1 = seq(1,nrow(outExon),4)
v2 = outExon$pos[v1]
axis(side = 1,at = v1,labels = v2)
abline(h = 0,col = 'red')
text(x = ind,y= outExon$CI.R[ind]+.1,labels = '*')
plot(outExon$pos,outExon$logFC,xlab = 'chr18',ylab = 'Log2 Fold-change',
     ylim = ylim,main = 'Tcf4 Exon Fold-change', xaxt = 'n',cex.lab = 1.25)
arrows(as.numeric(outExon$pos),outExon$CI.L,as.numeric(outExon$pos),outExon$CI.R,
       code=3,length=0.04,angle=90,col='black')
v1 = seq(1,nrow(outExon),4)
v2 = outExon$pos[v1]
axis(side = 1,at = v1,labels = v2)
abline(h = 0,col = 'red')
text(x = ind,y= outExon$CI.R[ind]+.1,labels = '*',cex = 1.5)
head(outExon)
mod
cleaningY = function(y, mod, P=ncol(mod)) {
Hat=solve(t(mod)%*%mod)%*%t(mod)
beta=(Hat%*%t(y))
cleany=y-t(as.matrix(mod[,-c(1:P)])%*%beta[-c(1:P),])
return(cleany)
}
tcf4Exon = 2^cleaningY(yExon[rownames(outExon),],modExon, P = 4)-1
pd$ExonExpr = tcf4Exon[nrow(outExon),]
head(outExon)
pd$fdr = outExon$adj.P.Val[nrow(outExon)]
outExon$adj.P.Val[nrow(outExon)]
ggplot(data=pd) +
  geom_boxplot(aes(x=Age, y=ExonExpr, fill=Genotype),position = position_dodge(width = .5)) +
  theme_bw(base_size = 14, base_family = "Helvetica")  + 
  geom_point(pch=21,aes(x=Age, y=ExonExpr, fill=Genotype), position=position_jitterdodge(dodge.width = .5))+
  scale_fill_manual(values = c("gray","red"),name = "",breaks = c("WT","HT"),labels = c("","")) + ylim(c(0,max(pd$ExonExpr))) +
  scale_x_discrete(labels =c("P1","P21","Adult")) + 
  ylab("Adjusted FPKM")+xlab("") + theme(axis.text.x=element_text(angle=45,hjust = 1)) +
  theme(axis.title.y = element_text(family="Helvetica", face="bold", size=16),
        axis.text.y = element_text(family="Helvetica", face="bold", size=14),
        axis.text.x = element_text(family="Helvetica", face="bold", size=14))
library(ggplot2)
ggplot(data=pd) +
  geom_boxplot(aes(x=Age, y=ExonExpr, fill=Genotype),position = position_dodge(width = .5)) +
  theme_bw(base_size = 14, base_family = "Helvetica")  + 
  geom_point(pch=21,aes(x=Age, y=ExonExpr, fill=Genotype), position=position_jitterdodge(dodge.width = .5))+
  scale_fill_manual(values = c("gray","red"),name = "",breaks = c("WT","HT"),labels = c("","")) + ylim(c(0,max(pd$ExonExpr))) +
  scale_x_discrete(labels =c("P1","P21","Adult")) + 
  ylab("Adjusted FPKM")+xlab("") + theme(axis.text.x=element_text(angle=45,hjust = 1)) +
  theme(axis.title.y = element_text(family="Helvetica", face="bold", size=16),
        axis.text.y = element_text(family="Helvetica", face="bold", size=14),
        axis.text.x = element_text(family="Helvetica", face="bold", size=14))
ggplot(data=pd) +
  geom_boxplot(aes(x=Age, y=ExonExpr, fill=Genotype),position = position_dodge(width = .5),outlier.shape=NA) +
  theme_bw(base_size = 14, base_family = "Helvetica")  + 
  geom_point(pch=21,aes(x=Age, y=ExonExpr, fill=Genotype), position=position_jitterdodge(dodge.width = .5))+
  scale_fill_manual(values = c("gray","red"),name = "",breaks = c("WT","HT"),labels = c("","")) + ylim(c(0,max(pd$ExonExpr))) +
  scale_x_discrete(labels =c("P1","P21","Adult")) + 
  ylab("Adjusted FPKM")+xlab("") + theme(axis.text.x=element_text(angle=45,hjust = 1)) +
  theme(axis.title.y = element_text(family="Helvetica", face="bold", size=16),
        axis.text.y = element_text(family="Helvetica", face="bold", size=14),
        axis.text.x = element_text(family="Helvetica", face="bold", size=14))
pdf("plots/fig1_tcf4_mouse_exons.pdf",height = 3.5, width = 4)
ylim = c(min(outExon[,c('CI.L','CI.R')])-.2,max(outExon[,c('CI.L','CI.R')])+.2)
plot(outExon$pos,outExon$logFC,xlab = 'chr18',ylab = 'Log2 Fold-change',
     ylim = ylim,main = 'Tcf4 Exon Fold-change', xaxt = 'n',cex.lab = 1.25)
arrows(as.numeric(outExon$pos),outExon$CI.L,as.numeric(outExon$pos),outExon$CI.R,
       code=3,length=0.04,angle=90,col='black')
v1 = seq(1,nrow(outExon),4)
v2 = outExon$pos[v1]
axis(side = 1,at = v1,labels = v2)
abline(h = 0,col = 'red')
text(x = ind,y= outExon$CI.R[ind]+.1,labels = '*',cex = 1.5)
################################
# plot last coded coded exon chr18:69682683-69682823, e643016
tcf4Exon = 2^cleaningY(yExon[rownames(outExon),],modExon, P = 4)-1
pd$ExonExpr = tcf4Exon[nrow(outExon),]
pd$fdr = outExon$adj.P.Val[nrow(outExon)]
ggplot(data=pd) +
  geom_boxplot(aes(x=Age, y=ExonExpr, fill=Genotype),position = position_dodge(width = .5),outlier.shape=NA) +
  theme_bw(base_size = 14, base_family = "Helvetica")  + 
  geom_point(pch=21,aes(x=Age, y=ExonExpr, fill=Genotype), position=position_jitterdodge(dodge.width = .5))+
  scale_fill_manual(values = c("gray","red"),name = "",breaks = c("WT","HT"),labels = c("","")) + ylim(c(0,max(pd$ExonExpr))) +
  scale_x_discrete(labels =c("P1","P21","Adult")) + 
  ylab("Adjusted FPKM | SVs")+xlab("") + theme(axis.text.x=element_text(angle=45,hjust = 1)) +
  theme(axis.title.y = element_text(family="Helvetica", face="bold", size=16),
        axis.text.y = element_text(family="Helvetica", face="bold", size=14),
        axis.text.x = element_text(family="Helvetica", face="bold", size=14))
dev.off()
################################
# Exon plots with standard error
pdf("plots/fig1_tcf4_mouse_exons.pdf",height = 3.5, width = 4)
ylim = c(min(outExon[,c('CI.L','CI.R')])-.2,max(outExon[,c('CI.L','CI.R')])+.2)
plot(outExon$pos,outExon$logFC,xlab = 'chr18',ylab = 'Log2 Fold-change',
     ylim = ylim,main = 'Tcf4 Exon Fold-change', xaxt = 'n',cex.lab = 1.25)
arrows(as.numeric(outExon$pos),outExon$CI.L,as.numeric(outExon$pos),outExon$CI.R,
       code=3,length=0.04,angle=90,col='black')
v1 = seq(1,nrow(outExon),4)
v2 = outExon$pos[v1]
axis(side = 1,at = v1,labels = v2)
abline(h = 0,col = 'red')
text(x = ind,y= outExon$CI.R[ind]+.1,labels = '*',cex = 1.5)
################################
# plot last coded coded exon chr18:69682683-69682823, e643016
tcf4Exon = 2^cleaningY(yExon[rownames(outExon),],modExon, P = 4)-1
pd$ExonExpr = tcf4Exon[nrow(outExon),]
pd$fdr = outExon$adj.P.Val[nrow(outExon)]
ggplot(data=pd) +
  geom_boxplot(aes(x=Age, y=ExonExpr, fill=Genotype),position = position_dodge(width = .5),outlier.shape=NA) +
  theme_bw(base_size = 14, base_family = "Helvetica")  + 
  geom_point(pch=21,aes(x=Age, y=ExonExpr, fill=Genotype), position=position_jitterdodge(dodge.width = .5))+
  scale_fill_manual(values = c("gray","red"),name = "",breaks = c("WT","HT")) + ylim(c(0,max(pd$ExonExpr))) +
  scale_x_discrete(labels =c("P1","P21","Adult")) + 
  ylab("Adjusted FPKM | SVs")+xlab("") + theme(axis.text.x=element_text(angle=45,hjust = 1)) +
  theme(axis.title.y = element_text(family="Helvetica", face="bold", size=16),
        axis.text.y = element_text(family="Helvetica", face="bold", size=14),
        axis.text.x = element_text(family="Helvetica", face="bold", size=14))
dev.off()
rm(list = ls())
load('/dcl01/lieber/ajaffe/Brady/mouseRNAseq/mouse_tcf4_DESeq2_svaAdj.rda')
resGene <- results(geneDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
resExon <- results(exonDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
resJxn <- results(jxnDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
sum(resGene$padj < 0.05, na.rm=TRUE)
sum(resExon$padj < 0.05, na.rm=TRUE)
sum(resJxn$padj < 0.05, na.rm=TRUE)
outGene <- as.data.frame(resGene[order(resGene$padj,resGene$pvalue),])
outGene = cbind(outGene,geneMap[rownames(outGene),])
sigGene = outGene[which(outGene$pvalue<.01),]
ls()
resGene <- results(geneDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
ls()
rm (list = ls())
source('../DESeq2_functions.R') #work-horse of differential expression
##############################################
# load phenotype data and RPKM expression data
load('./rdas/pheno.rda',envir = dat<-new.env())
load('/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rawCounts_tcf4_mouse_OCT20_n36.rda')
pd = cbind(dat$pd,pd)
all.equal(pd$FileID,pd$SAMPLE_ID) #samples line up
##########################
# conform to DESeq2 data types
jCounts = as.matrix(as.data.frame(jCounts))
jIndex=which(jMap$code != "Novel")
jCounts = jCounts[jIndex,]
jMap = jMap[jIndex]
colnames(jCounts) = pd$SAMPLE_ID
rownames(pd) = pd$SAMPLE_ID
##########################
# remove outliers mouse 31
pd = pd[-c(31),]
geneCounts = geneCounts[,-c(31)]
exonCounts = exonCounts[,-c(31)]
jCounts = jCounts[,-c(31)]
##############################
# create and run DESeq objects
geneDds <- DESeq2(countData = geneCounts, colData = pd, design = ~Genotype+Age,sva = TRUE,parallel=TRUE)
rm(geneCounts); gc()
exonDds <- DESeq2(countData = exonCounts, colData = pd, design = ~Genotype+Age,sva = TRUE,parallel=TRUE)
rm(exonCounts); gc()
jxnDds <- DESeq2(countData = jCounts, colData = pd, design = ~Genotype+Age,sva = TRUE,parallel=TRUE)
rm(jCounts); gc()
############################################
# get DE results, and fold-change PTHS v. WT
resGene <- results(geneDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
resExon <- results(exonDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
resJxn <- results(jxnDds,contrast = c('Genotype','HT','WT'),alpha=0.05) 
sum(resGene$padj < 0.05, na.rm=TRUE)
sum(resExon$padj < 0.05, na.rm=TRUE)
sum(resJxn$padj < 0.05, na.rm=TRUE)
outGene <- as.data.frame(resGene[order(resGene$padj,resGene$pvalue),])
outGene = cbind(outGene,geneMap[rownames(outGene),])
sigGene = outGene[which(outGene$pvalue<.01),]
outExon <- as.data.frame(resExon[order(resExon$padj,resExon$pvalue),])
outExon = cbind(outExon,exonMap[rownames(outExon),])
sigExon = outExon[which(outExon$pvalue<.01),]
outJxn <- as.data.frame(resJxn[order(resJxn$padj,resJxn$pvalue),])
outJxn = cbind(outJxn, as.data.frame(jMap)[rownames(outJxn),])
sigJxn = outJxn[which(outJxn$pvalue<.01),]
head(sigGene,43)
plotMA(resGene, main="Gene MA plot", ylim=c(-.75,.75))
library(WriteXLS)
WriteXLS(list(Gene = sigGene,Exon = sigExon,Junction = sigJxn), ExcelFileName = 'tables/mecp2_DE_table_DESeq2.xls',row.names=T)
save(outGene,outExon,outJxn,file = 'rdas/mecp2_DE_objects_DESeq2.rda')
save(geneDds,exonDds,jxnDds, file = '/dcl01/lieber/ajaffe/Brady/mouseRNAseq/Rett/mecp2_DESeq2_svaAdj.rda')
library(jaffelab)
library(WriteXLS)
library(clusterProfiler)
library(org.Mm.eg.db)
#########################
# define background genes
univ = c(outGene$EntrezID,outExon$EntrezID, outJxn$EntrezID)
univ = as.character(unique(univ[!is.na(univ)]))
univ
length(univ)
head(outGene)
statList = list(Gene = outGene, Exon = outExon, Junction= outJxn)
sigStatList = lapply(statList, function(x) x[x$pvalue < 0.01,c("log2FoldChange", "Symbol", "EntrezID")])
sigStatList = lapply(statList, function(x) x[x$pvalue < 0.01,c("log2FoldChange", "Symbol", "EntrezID")])
x = outGene
a = x[x$pvalue < 0.01,c("log2FoldChange", "Symbol", "EntrezID")]
sigStatList = lapply(statList, function(x) x[x$pvalue < 0.01,c("log2FoldChange", "EntrezID")])
head(outExon)
head(outJxn)
class(outJxn$newGeneID)
outJxn$EntrezID = outGene[outJxn$newGeneID,c('EntrezID')]
univ = c(outGene$EntrezID,outExon$EntrezID, outJxn$EntrezID)
univ = as.character(unique(univ[!is.na(univ)]))
length(univ)
statList = list(Gene = outGene, Exon = outExon, Junction= outJxn)
sigStatList = lapply(statList, function(x) x[x$pvalue < 0.01,c("log2FoldChange", "EntrezID")])
sigStats = do.call("rbind", sigStatList)
sigStats$type = ss(rownames(sigStats), "\\.")
sigStats = sigStats[!is.na(sigStats$EntrezID),]
sigStats = sigStats[!duplicated(sigStats[,c("EntrezID", "type")]),]
sigStats$EntrezID = as.character(sigStats$EntrezID)
tapply(sigStats$EntrezID,sigStats$type,length) #2148 exons,263 genes, 664 junctions
gList = split(sigStats$EntrezID, sigStats$type)
compareKegg = compareCluster(gList,fun = 'enrichKEGG',universe = univ,organism = "mmu", qvalueCutoff = 0.05,pvalueCutoff = 0.1)
compareGoMf = compareCluster(gList, fun = "enrichGO", universe = univ, ont = "MF",OrgDb=org.Mm.eg.db, qvalueCutoff = 0.05, pvalueCutoff = 0.1, readable = TRUE)
compareGoBp = compareCluster(gList, fun = "enrichGO", universe = univ, ont = "BP",OrgDb=org.Mm.eg.db, qvalueCutoff = 0.05, pvalueCutoff = 0.1, readable = TRUE)
compareGoCc = compareCluster(gList, fun = "enrichGO", universe = univ, ont = "CC",OrgDb=org.Mm.eg.db, qvalueCutoff = 0.05, pvalueCutoff = 0.1, readable = TRUE)
compareGo = list(compareGoMf=compareGoMf,compareGoBp=compareGoBp,compareGoCc = compareGoCc)
a = lapply(compareGo,as.data.frame)
sapply(a,dim)
compareGo = lapply(compareGo,simplify)
a = lapply(compareGo,as.data.frame)
sapply(a,dim)
plot(compareKegg,colorBy="qvalue", font.size =8,title = "KEGG Terms DE Group Comparisons")
pdf("plots/gene_sets_tcf4_mouse.pdf")
plot(compareKegg,colorBy="qvalue", font.size =8,title = "KEGG Terms DE Group Comparisons")
plot(compareGo[[1]],colorBy="qvalue", font.size =8, title = "Enriched GO-MF Terms")
plot(compareGo[[2]],colorBy="qvalue", font.size =8, title = "Enriched GO-BP Terms")
plot(compareGo[[3]],colorBy="qvalue", font.size =8, title = "Enriched GO-CC Terms")
dev.off()
save(compareKegg, compareGo, file = "rdas/gene_sets_tcf4_mouse.rda")
WriteXLS(lapply(c(compareGo,compareKegg=compareKegg), as.data.frame),ExcelFileName = "tables/gene_sets_tcf4_mouse.xls")
rm(list = ls())
library(jaffelab)
#############################
# load all the phenotype data
load('./rdas/pheno.rda',envir = maherDat<-new.env())
load('../philpot/rdas/pheno.rda',envir = philpotDat<-new.env())
load('../sweatt/rdas/pheno.rda',envir = sweattDat<-new.env())
##########################
# clean up phenotype data
maherDat$pd$Line = 'Maher'
sweattDat$pd$Line = 'Sweatt'
sweattDat$pd$Age = 'Adult'
philpotDat$pd$FileID = ss(philpotDat$pd$'BGI file name','.fq.gz')
philpotDat$pd$Genotype = ifelse(grepl('Mutant',philpotDat$pd$'General genotype'),'HT', 'WT')
#########
# combine
cols = c('FileID', 'Line', 'Genotype','Age')
pd = rbind(maherDat$pd[,cols],philpotDat$pd[,cols],sweattDat$pd[,cols])
##################
# load gene counts
load('/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rawCounts_tcf4_mouse_OCT20_n36.rda', envir = maherCounts<-new.env())
load('/dcl01/lieber/ajaffe/Brady/philpot/rawCounts_philpot_OCT20_n58.rda', envir = philCounts<-new.env())
load('/dcl01/lieber/ajaffe/Brady/sweatt/rawCounts_sweatt_OCT20_n16.rda', envir = sweattCounts<-new.env())
#################################################
# find interesection of gene/exon/junction counts
mGene = Reduce(intersect,list(rownames(maherCounts$geneMap),rownames(philCounts$geneMap),rownames(sweattCounts$geneMap)))
mExon = Reduce(intersect,list(with(maherCounts$exonMap,paste(Chr,Start,End))
                              ,with(philCounts$exonMap,paste(Chr,Start,End)),
                              with(sweattCounts$exonMap,paste(Chr,Start,End))))
mJxn = Reduce(intersect,list(rownames(maherCounts$jMap),rownames(philCounts$jMap),rownames(sweattCounts$jMap)))
geneMap = maherCounts$geneMap[mGene,]
exonMap = maherCounts$exonMap[
  match(mExon,with(maherCounts$exonMap,paste(Chr,Start,End))),]
jMap = maherCounts$jMap[mJxn,]
geneMap = maherCounts$geneMap[mGene,]
indExon = match(mExon,with(maherCounts$exonMap,paste(Chr,Start,End)))
exonMap = maherCounts$exonMap[indExon,]
jMap = maherCounts$jMap[mJxn,]
indExon1 = match(mExon,with(maherCounts$exonMap,paste(Chr,Start,End)))
indExon2 = match(mExon,with(philCounts$exonMap,paste(Chr,Start,End)))
indExon3 = match(mExon,with(sweattCounts$exonMap,paste(Chr,Start,End)))
geneCounts = cbind(maherCounts$geneCounts[mGene,],
                   philCounts$geneCounts[mGene,],
                   sweattCounts$geneCounts[mGene,])
exonCounts = cbind(maherCounts$exonCounts[indExon1,],
                philCounts$exonCounts[indExon2,],
                sweattCounts$exonCounts[indExon3,])
jCounts = cbind(maherCounts$jCounts[mJxn,],
                   philCounts$jCounts[mJxn,],
                   sweattCounts$jCounts[mJxn,])
dim(geneCounts)
pd = cbind(pd,rbind(maherCounts$pd,philCounts$pd,sweattCounts$pd))
rbind(maherCounts$pd,philCounts$pd,sweattCounts$pd)
ls(maherCounts)
maherCounts$pd
dim(maherCounts$pd)
dim(philCounts$pd)
dim(sweattCounts$pd)
cols = Reduce(intersect,lapply(list(maherCounts$pd,philCounts$pd,sweattCounts$pd),names))
pd = cbind(pd,rbind(maherCounts$pd[,cols],philCounts$pd[,cols],sweattCounts$pd[,cols]))
pd
all.equal(pd$FileID,pd$SAMPLE_ID)
save(pd, geneCounts,geneMap,exonCounts,exonMap,jCounts,jMap,file = '/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rawCounts_mega_analysis_nov14_n110.rda')
rm(maherCounts)
rm(philpotCounts)
rm(philCounts)
rm(sweattCounts)
ls()
rm(indExon2)
rm(indExon1)
rm(indExon3)
rm(indExon)
ls()
first_time
rm(first_time)
ls()
rm(sweattDat)
rm(philpotDat)
rm(maherDat)
ls()
rm(cols)
ls()
rm(mGene)
rm(mExon)
rm(mJxn)
dim(jMap)
mJxn
jMap
jCounts
mJxn
rm(list = ls())
ls()
library(jaffelab)
#############################
# load all the phenotype data
load('./rdas/pheno.rda',envir = maherDat<-new.env())
load('../philpot/rdas/pheno.rda',envir = philpotDat<-new.env())
load('../sweatt/rdas/pheno.rda',envir = sweattDat<-new.env())
##########################
# clean up phenotype data
maherDat$pd$Line = 'Maher'
sweattDat$pd$Line = 'Sweatt'
sweattDat$pd$Age = 'Adult'
philpotDat$pd$FileID = ss(philpotDat$pd$'BGI file name','.fq.gz')
philpotDat$pd$Genotype = ifelse(grepl('Mutant',philpotDat$pd$'General genotype'),'HT', 'WT')
#########
# combine
cols = c('FileID', 'Line', 'Genotype','Age')
pd = rbind(maherDat$pd[,cols],philpotDat$pd[,cols],sweattDat$pd[,cols])
##################
# load gene counts
load('/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rawCounts_tcf4_mouse_OCT20_n36.rda', envir = maherCounts<-new.env())
load('/dcl01/lieber/ajaffe/Brady/philpot/rawCounts_philpot_OCT20_n58.rda', envir = philpotCounts<-new.env())
load('/dcl01/lieber/ajaffe/Brady/sweatt/rawCounts_sweatt_OCT20_n16.rda', envir = sweattCounts<-new.env())
####################
# add processed data
cols = Reduce(intersect,lapply(list(maherCounts$pd,philpotCounts$pd,sweattCounts$pd),names))
pd = cbind(pd,rbind(maherCounts$pd[,cols],philpotCounts$pd[,cols],sweattCounts$pd[,cols]))
all.equal(pd$FileID,pd$SAMPLE_ID)
mGene = Reduce(intersect,list(rownames(maherCounts$geneMap),
                              rownames(philpotCounts$geneMap),
                              rownames(sweattCounts$geneMap)))
mExon = Reduce(intersect,list(with(maherCounts$exonMap,paste(Chr,Start,End))
                              ,with(philpotCounts$exonMap,paste(Chr,Start,End)),
                              with(sweattCounts$exonMap,paste(Chr,Start,End))))
mJxn = Reduce(intersect,list(rownames(maherCounts$jMap),
                             rownames(philpotCounts$jMap),
                             rownames(sweattCounts$jMap)))
head(mJxn)
class(maherCounts$jMap)
mJxn = Reduce(intersect,list(names(maherCounts$jMap),
                             names(philpotCounts$jMap),
                             names(sweattCounts$jMap)))
head(mJxn)
geneMap = maherCounts$geneMap[mGene,]
indExon = match(mExon,with(maherCounts$exonMap,paste(Chr,Start,End)))
exonMap = maherCounts$exonMap[indExon,]
jMap = maherCounts$jMap[mJxn,]
head(jMap)
indExon1 = match(mExon,with(maherCounts$exonMap,paste(Chr,Start,End)))
indExon2 = match(mExon,with(philpotCounts$exonMap,paste(Chr,Start,End)))
indExon3 = match(mExon,with(sweattCounts$exonMap,paste(Chr,Start,End)))
geneCounts = cbind(maherCounts$geneCounts[mGene,],
                   philpotCounts$geneCounts[mGene,],
                   sweattCounts$geneCounts[mGene,])
exonCounts = cbind(maherCounts$exonCounts[indExon1,],
                philpotCounts$exonCounts[indExon2,],
                sweattCounts$exonCounts[indExon3,])
jCounts = cbind(maherCounts$jCounts[mJxn,],
                   philpotCounts$jCounts[mJxn,],
                   sweattCounts$jCounts[mJxn,])
dim(jCounts)
dim(exonCounts)
dim(geneCounts)
dim(geneMap)
dim(exonMap)
dim(jMap)
jMap
length(jMap)
save(pd, geneCounts,geneMap,exonCounts,exonMap,jCounts,jMap,file = '/dcl01/lieber/ajaffe/Brady/mouseRNAseq/rawCounts_mega_analysis_nov14_n110.rda')
rm(list = ls())
